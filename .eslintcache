[{"D:\\playground\\storyboard-react-type\\src\\stories\\Page.stories.tsx":"1","D:\\playground\\storyboard-react-type\\src\\stories\\Button.tsx":"2","D:\\playground\\storyboard-react-type\\src\\index.tsx":"3","D:\\playground\\storyboard-react-type\\src\\App.tsx":"4","D:\\playground\\storyboard-react-type\\src\\stories\\Button.stories.tsx":"5","D:\\playground\\storyboard-react-type\\src\\stories\\Header.stories.tsx":"6","D:\\playground\\storyboard-react-type\\src\\stories\\Page.tsx":"7","D:\\playground\\storyboard-react-type\\src\\stories\\Header.tsx":"8","D:\\playground\\storyboard-react-type\\src\\components\\Task.stories.tsx":"9","D:\\playground\\storyboard-react-type\\src\\components\\Task.tsx":"10","D:\\playground\\storyboard-react-type\\src\\components\\TaskList.stories.tsx":"11","D:\\playground\\storyboard-react-type\\src\\components\\TaskList.tsx":"12","D:\\playground\\storyboard-react-type\\src\\lib\\redux.ts":"13"},{"size":605,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":965,"mtime":1607497185882,"results":"16","hashOfConfig":"17"},{"size":220,"mtime":1607496510209,"results":"18","hashOfConfig":"17"},{"size":187,"mtime":1607496430079,"results":"19","hashOfConfig":"17"},{"size":804,"mtime":499162500000,"results":"20","hashOfConfig":"15"},{"size":510,"mtime":499162500000,"results":"21","hashOfConfig":"15"},{"size":2415,"mtime":499162500000,"results":"22","hashOfConfig":"15"},{"size":1356,"mtime":499162500000,"results":"23","hashOfConfig":"15"},{"size":733,"mtime":1607499674116,"results":"24","hashOfConfig":"17"},{"size":1261,"mtime":1607577634226,"results":"25","hashOfConfig":"17"},{"size":1901,"mtime":1607585429908,"results":"26","hashOfConfig":"17"},{"size":1974,"mtime":1607585417712,"results":"27","hashOfConfig":"17"},{"size":1769,"mtime":1607577565502,"results":"28","hashOfConfig":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"rqzlfk",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfebul",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},"D:\\playground\\storyboard-react-type\\src\\stories\\Page.stories.tsx",[],["59","60"],"D:\\playground\\storyboard-react-type\\src\\stories\\Button.tsx",[],"D:\\playground\\storyboard-react-type\\src\\index.tsx",[],[],"D:\\playground\\storyboard-react-type\\src\\App.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Button.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Header.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Page.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Header.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\Task.stories.tsx",[],[],"D:\\playground\\storyboard-react-type\\src\\components\\Task.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\TaskList.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\TaskList.tsx",[],"D:\\playground\\storyboard-react-type\\src\\lib\\redux.ts",["61","62","63","64","65"],"import { createStore } from 'redux';\r\n\r\n// The actions are the \"names\" of the changes that can happen to the store\r\nexport const actions = {\r\n  ARCHIVE_TASK: 'ARCHIVE_TASK',\r\n  PIN_TASK: 'PIN_TASK',\r\n};\r\n\r\nexport interface ReduxProps {\r\n  type: string;\r\n  id: string;\r\n}\r\n\r\n// The action creators bundle actions with the data required to execute them\r\nexport const archiveTask = (id: string): ReduxProps => ({\r\n  type: actions.ARCHIVE_TASK,\r\n  id,\r\n});\r\nexport const pinTask = (id: string): ReduxProps => ({\r\n  type: actions.PIN_TASK,\r\n  id,\r\n});\r\n\r\n// All our reducers simply change the state of a single task.\r\nfunction taskStateReducer(taskState: string) {\r\n  return (state: any, action: ReduxProps) => {\r\n    return {\r\n      ...state,\r\n      tasks: state.tasks.map((task: any) =>\r\n        task.id === action.id ? { ...task, state: taskState } : task\r\n      ),\r\n    };\r\n  };\r\n}\r\n\r\n// The reducer describes how the contents of the store change for each action\r\nexport const reducer = (state: any, action: ReduxProps): any => {\r\n  switch (action.type) {\r\n    case actions.ARCHIVE_TASK:\r\n      return taskStateReducer('TASK_ARCHIVED')(state, action);\r\n    case actions.PIN_TASK:\r\n      return taskStateReducer('TASK_PINNED')(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// The initial state of our store when the app loads.\r\n// Usually you would fetch this from a server\r\nconst defaultTasks = [\r\n  { id: '1', title: 'Something', state: 'TASK_INBOX' },\r\n  { id: '2', title: 'Something more', state: 'TASK_INBOX' },\r\n  { id: '3', title: 'Something else', state: 'TASK_INBOX' },\r\n  { id: '4', title: 'Something again', state: 'TASK_INBOX' },\r\n];\r\n\r\n// We export the constructed redux store\r\nexport default createStore(reducer, { tasks: defaultTasks });\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":26,"column":18,"nodeType":"72","messageId":"73","endLine":26,"endColumn":21,"suggestions":"74"},{"ruleId":"70","severity":1,"message":"71","line":29,"column":37,"nodeType":"72","messageId":"73","endLine":29,"endColumn":40,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":37,"column":25,"nodeType":"78","messageId":"79","endLine":37,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":37,"column":32,"nodeType":"72","messageId":"73","endLine":37,"endColumn":35,"suggestions":"80"},{"ruleId":"70","severity":1,"message":"71","line":37,"column":58,"nodeType":"72","messageId":"73","endLine":37,"endColumn":61,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["84","85"],["86","87"],"@typescript-eslint/explicit-module-boundary-types","Argument 'state' should be typed with a non-any type.","Identifier","anyTypedArg",["88","89"],["90","91"],"no-global-assign","no-unsafe-negation",{"messageId":"92","fix":"93","desc":"94"},{"messageId":"95","fix":"96","desc":"97"},{"messageId":"92","fix":"98","desc":"94"},{"messageId":"95","fix":"99","desc":"97"},{"messageId":"92","fix":"100","desc":"94"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"92","fix":"102","desc":"94"},{"messageId":"95","fix":"103","desc":"97"},"suggestUnknown",{"range":"104","text":"105"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"104","text":"106"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"107","text":"105"},{"range":"107","text":"106"},{"range":"108","text":"105"},{"range":"108","text":"106"},{"range":"109","text":"105"},{"range":"109","text":"106"},[678,681],"unknown","never",[776,779],[994,997],[1020,1023]]