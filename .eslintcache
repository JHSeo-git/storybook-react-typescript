[{"D:\\playground\\storyboard-react-type\\src\\stories\\Page.stories.tsx":"1","D:\\playground\\storyboard-react-type\\src\\stories\\Button.tsx":"2","D:\\playground\\storyboard-react-type\\src\\index.tsx":"3","D:\\playground\\storyboard-react-type\\src\\App.tsx":"4","D:\\playground\\storyboard-react-type\\src\\stories\\Button.stories.tsx":"5","D:\\playground\\storyboard-react-type\\src\\stories\\Header.stories.tsx":"6","D:\\playground\\storyboard-react-type\\src\\stories\\Page.tsx":"7","D:\\playground\\storyboard-react-type\\src\\stories\\Header.tsx":"8","D:\\playground\\storyboard-react-type\\src\\components\\Task.stories.tsx":"9","D:\\playground\\storyboard-react-type\\src\\components\\Task.tsx":"10","D:\\playground\\storyboard-react-type\\src\\components\\TaskList.stories.tsx":"11","D:\\playground\\storyboard-react-type\\src\\components\\TaskList.tsx":"12","D:\\playground\\storyboard-react-type\\src\\lib\\redux.ts":"13","D:\\playground\\storyboard-react-type\\src\\components\\InboxScreen.stories.tsx":"14","D:\\playground\\storyboard-react-type\\src\\components\\InboxScreen.tsx":"15"},{"size":605,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":965,"mtime":1607497185882,"results":"18","hashOfConfig":"19"},{"size":220,"mtime":1607496510209,"results":"20","hashOfConfig":"19"},{"size":187,"mtime":1607496430079,"results":"21","hashOfConfig":"19"},{"size":804,"mtime":499162500000,"results":"22","hashOfConfig":"17"},{"size":510,"mtime":499162500000,"results":"23","hashOfConfig":"17"},{"size":2415,"mtime":499162500000,"results":"24","hashOfConfig":"17"},{"size":1356,"mtime":499162500000,"results":"25","hashOfConfig":"17"},{"size":733,"mtime":1607499674116,"results":"26","hashOfConfig":"19"},{"size":1261,"mtime":1607577634226,"results":"27","hashOfConfig":"19"},{"size":1901,"mtime":1607585429908,"results":"28","hashOfConfig":"19"},{"size":1974,"mtime":1607585417712,"results":"29","hashOfConfig":"19"},{"size":1769,"mtime":1607577565502,"results":"30","hashOfConfig":"19"},{"size":840,"mtime":1607664068280,"results":"31","hashOfConfig":"19"},{"size":891,"mtime":1607661351270,"results":"32","hashOfConfig":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"rqzlfk",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfebul",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\playground\\storyboard-react-type\\src\\stories\\Page.stories.tsx",[],["67","68"],"D:\\playground\\storyboard-react-type\\src\\stories\\Button.tsx",[],"D:\\playground\\storyboard-react-type\\src\\index.tsx",[],[],"D:\\playground\\storyboard-react-type\\src\\App.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Button.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Header.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Page.tsx",[],"D:\\playground\\storyboard-react-type\\src\\stories\\Header.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\Task.stories.tsx",[],[],"D:\\playground\\storyboard-react-type\\src\\components\\Task.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\TaskList.stories.tsx",[],"D:\\playground\\storyboard-react-type\\src\\components\\TaskList.tsx",[],"D:\\playground\\storyboard-react-type\\src\\lib\\redux.ts",["69","70","71","72","73"],"import { createStore } from 'redux';\r\n\r\n// The actions are the \"names\" of the changes that can happen to the store\r\nexport const actions = {\r\n  ARCHIVE_TASK: 'ARCHIVE_TASK',\r\n  PIN_TASK: 'PIN_TASK',\r\n};\r\n\r\nexport interface ReduxProps {\r\n  type: string;\r\n  id: string;\r\n}\r\n\r\n// The action creators bundle actions with the data required to execute them\r\nexport const archiveTask = (id: string): ReduxProps => ({\r\n  type: actions.ARCHIVE_TASK,\r\n  id,\r\n});\r\nexport const pinTask = (id: string): ReduxProps => ({\r\n  type: actions.PIN_TASK,\r\n  id,\r\n});\r\n\r\n// All our reducers simply change the state of a single task.\r\nfunction taskStateReducer(taskState: string) {\r\n  return (state: any, action: ReduxProps) => {\r\n    return {\r\n      ...state,\r\n      tasks: state.tasks.map((task: any) =>\r\n        task.id === action.id ? { ...task, state: taskState } : task\r\n      ),\r\n    };\r\n  };\r\n}\r\n\r\n// The reducer describes how the contents of the store change for each action\r\nexport const reducer = (state: any, action: ReduxProps): any => {\r\n  switch (action.type) {\r\n    case actions.ARCHIVE_TASK:\r\n      return taskStateReducer('TASK_ARCHIVED')(state, action);\r\n    case actions.PIN_TASK:\r\n      return taskStateReducer('TASK_PINNED')(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// The initial state of our store when the app loads.\r\n// Usually you would fetch this from a server\r\nconst defaultTasks = [\r\n  { id: '1', title: 'Something', state: 'TASK_INBOX' },\r\n  { id: '2', title: 'Something more', state: 'TASK_INBOX' },\r\n  { id: '3', title: 'Something else', state: 'TASK_INBOX' },\r\n  { id: '4', title: 'Something again', state: 'TASK_INBOX' },\r\n];\r\n\r\n// We export the constructed redux store\r\nexport default createStore(reducer, { tasks: defaultTasks });\r\n","D:\\playground\\storyboard-react-type\\src\\components\\InboxScreen.stories.tsx",["74","75"],"D:\\playground\\storyboard-react-type\\src\\components\\InboxScreen.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":26,"column":18,"nodeType":"82","messageId":"83","endLine":26,"endColumn":21,"suggestions":"84"},{"ruleId":"80","severity":1,"message":"81","line":29,"column":37,"nodeType":"82","messageId":"83","endLine":29,"endColumn":40,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":37,"column":25,"nodeType":"88","messageId":"89","endLine":37,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":37,"column":32,"nodeType":"82","messageId":"83","endLine":37,"endColumn":35,"suggestions":"90"},{"ruleId":"80","severity":1,"message":"81","line":37,"column":58,"nodeType":"82","messageId":"83","endLine":37,"endColumn":61,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"81","line":14,"column":18,"nodeType":"82","messageId":"83","endLine":14,"endColumn":21,"suggestions":"92"},{"ruleId":"80","severity":1,"message":"81","line":20,"column":53,"nodeType":"82","messageId":"83","endLine":20,"endColumn":56,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["96","97"],["98","99"],"@typescript-eslint/explicit-module-boundary-types","Argument 'state' should be typed with a non-any type.","Identifier","anyTypedArg",["100","101"],["102","103"],["104","105"],["106","107"],"no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"111","fix":"115","desc":"113"},{"messageId":"108","fix":"116","desc":"110"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"108","fix":"118","desc":"110"},{"messageId":"111","fix":"119","desc":"113"},{"messageId":"108","fix":"120","desc":"110"},{"messageId":"111","fix":"121","desc":"113"},{"messageId":"108","fix":"122","desc":"110"},{"messageId":"111","fix":"123","desc":"113"},"suggestUnknown",{"range":"124","text":"125"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"124","text":"126"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"127","text":"125"},{"range":"127","text":"126"},{"range":"128","text":"125"},{"range":"128","text":"126"},{"range":"129","text":"125"},{"range":"129","text":"126"},{"range":"130","text":"125"},{"range":"130","text":"126"},{"range":"131","text":"125"},{"range":"131","text":"126"},[678,681],"unknown","never",[776,779],[994,997],[1020,1023],[425,428],[572,575]]